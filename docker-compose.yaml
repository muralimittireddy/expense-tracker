services:
  db:
    image: postgres:16-alpine
    container_name: expensetracker_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql # For initial table creation
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build: ./backend/user-service
    container_name: expensetracker_user_service
    environment:
      # ... (include all user-service specific environment variables)
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
      API_V1_STR: ${API_V1_STR}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/user-service:/app # Mount for hot-reloading
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  expense-service:
    build: ./backend/expense-service
    container_name: expensetracker_expense_service
    environment:
      # ... (include all expense-service specific environment variables)
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
      API_V1_STR: ${API_V1_STR}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    ports:
      - "8002:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/expense-service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  budget-service:
    build: ./backend/budget-service
    container_name: expensetracker_budget_service
    environment:
      # ... (include all budget-service specific environment variables)
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
      API_V1_STR: ${API_V1_STR}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    ports:
      - "8003:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/budget-service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    container_name: expensetracker_frontend
    # Environment variable for the React app's API base URL
    environment:
      VITE_USER_SERVICE_URL: http://user-service:8000/ # Internal Docker network name and port
      VITE_EXPENSE_SERVICE_URL: http://expense-service:8000/
      VITE_BUDGET_SERVICE_URL: http://budget-service:8000/
    ports:
      - "5173:80" # Map host port 5173 to container's Nginx port 80
    depends_on:
      backend:
        condition: service_started # Frontend only needs backend to be started, not necessarily healthy (for initial load)

volumes:
  pgdata:
